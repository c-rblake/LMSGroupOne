using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace LMSGroupOne.LibraryClientApi
{
    /// <summary>
    /// A Class to replace AutoGeneratedDtos
    /// </summary>
    public class LibraryModels
    {
    }
    public class AuthorDto
    {
        public int Id { get; set; }
        //public string FirstName { get; set; }
        //public string LastName { get; set; }

        public string Name { get; set; }
        public int Age { get; set; }

        //Nav properties
        public ICollection<AuthorWorkDto> Works { get; set; } // Circular WARNING Works <=> Authors
                                                              // Todo Also change the Parameter Name to something presentable such as Works
    }
    public class AuthorWorkDto // A Class to Prevent Circular References.
    {
        public int Id { get; set; }
        public int GenreId { get; set; }
        public int TypeId { get; set; }

        public string Title { get; set; }
        public string Description { get; set; }

        public string Level { get; set; }

        public DateTime PublicationDate { get; set; }

        //public ICollection<Author> Authors { get; set; }
        public Genre Genre { get; set; }

        public Type Type { get; set; }
    }

    public class Genre
    {
        public int Id { get; set; }

        public string Description { get; set; }
        public string Name { get; set; }
    }

    public class Type
    {
        public int Id { get; set; }

        public string Description { get; set; }
        public string Name { get; set; }
    }

    public class Author
    {
        public int Id { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }

        //Todo DateTimeOffset instead
        public DateTimeOffset DateOfBirth { get; set; }
        public DateTimeOffset? DateOfDeath { get; set; }

        //Nav properties
        public List<Work> Works { get; set; } = new List<Work>(); // Want to AddRange
    }

    public class Work
    {
        public int Id { get; set; }
        public int GenreId { get; set; }
        public int TypeId { get; set; }

        public string Title { get; set; } //<string, Mappning + reverse>

        public string Description { get; set; }

        public string Level { get; set; }

        public DateTime PublicationDate { get; set; }

        public ICollection<Author> Authors { get; set; }
        public Genre Genre { get; set; }

        public Type Type { get; set; }
    }

    public class WorkDto
    {
        public int Id { get; set; }
        public int GenreId { get; set; }
        public int TypeId { get; set; }

        public string Title { get; set; }
        public string Description { get; set; }

        public string Level { get; set; }

        public DateTime PublicationDate { get; set; }

        public List<WorkAuthorDto> Authors { get; set; }
        public Genre Genre { get; set; }

        public Type Type { get; set; }
    }

    public class WorkAuthorDto
    {
        /// <summary>
        /// A Class to Prevent Circular references. Work *-* Author
        /// </summary>
        public int Id { get; set; }
        public string Name { get; set; }
        public int Age { get; set; }

        //Nav properties
        //public ICollection<Work> Works { get; set; }
    }
    public class CreateAuthorViewModel
    {
        //Author
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public DateTimeOffset DateOfBirth { get; set; }
        public DateTimeOffset? DateOfDeath { get; set; }

        //Work
        public int GenreId { get; set; }
        public int TypeId { get; set; }

        public string Title { get; set; } //<string, Mappning + reverse>

        public string Description { get; set; }

        public string Level { get; set; }

        public DateTime PublicationDate { get; set; }

        public Genre Genre { get; set; }

        public LibraryClientApi.Type Type { get; set; }
    }
}
